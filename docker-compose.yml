version: '3.9'

services:
#  legacy:
  #    build:
  #      context: legacy
  #      dockerfile: src/main/resources/library.dockerfile
  #    environment:
  #      NOTIFICATION_SERVICE_URL: http://notification:8080
  #      ENABLE_LEGACY: false
  #    ports:
  #      - "8080:8080"
  #    networks:
  #      - network1
  notification:
    build:
      context: notification-service
      dockerfile: src/main/resources/notification.dockerfile
    expose:
      - 8080
    ports:
      - "8090:8080"
    networks:
      - network1
  book:
    build:
      context: book-service
      dockerfile: src/main/resources/book.dockerfile
    expose:
      - 8080
    ports:
      - "8100:8080"
    networks:
      - network1
  delivery:
    build:
      context: delivery-service
      dockerfile: src/main/resources/delivery.dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    expose:
      - 8080
    ports:
      - "8300:8080"
    networks:
      - network1
  order:
    build:
      context: order-service
      dockerfile: src/main/resources/order.dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    expose:
      - 8080
    ports:
      - "8100:8080"
    networks:
      - network1
  payment:
    build:
      context: payment-service
      dockerfile: src/main/resources/payment.dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ORDER_SERVICE_URL=http://order:8080
    expose:
      - 8080
    ports:
      - "8200:8080"
    networks:
      - network1
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_MODE: 'kraft'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 3
    networks:
      - network1
  console:
    image: docker.redpanda.com/vectorized/console
    environment:
      KAFKA_BROKERS: kafka:29092
    ports:
      - 8080:8080
    networks:
      - network1
  mongo:
    image: mongo:6
    ports:
      - 27017:27017
    networks:
      - network1
  mongo-express:
    image: mongo-express
    ports:
      - 8085:8081
    networks:
      - network1
networks:
  network1:
    driver: bridge